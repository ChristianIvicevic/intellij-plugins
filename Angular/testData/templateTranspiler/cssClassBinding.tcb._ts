/* Angular type checking code */
/* Imports */
import * as _i1 from "@angular/common";
import * as _i2 from "@angular/core";
/* Directives */
const _ctor1 = null! as <T = any, U extends _i2.NgIterable<T> = _i2.NgIterable<T>>(init: Pick<_i1.NgForOf<T, U>, "ngForOf" | "ngForTrackBy" | "ngForTemplate">) => _i1.NgForOf<T, U>;

/* TCB for cssClassBinding.ts */

function _tcb_0(this: AppComponent) {
var _t1 = _ctor1({"ngForOf": this.heroes, "ngForTrackBy": null as any, "ngForTemplate": null as any});
_t1.ngForOf = this.heroes;
var _t2: any = null!;
if (_i1.NgForOf.ngTemplateContextGuard(_t1, _t2)) {
var _t3 = _t2.$implicit;
var _t4 = _t2.ngForOf;
_t3 === this.selectedHero;
var _t5 = document.createElement("li");
_t5.addEventListener("click", ($event): any => {
if (_i1.NgForOf.ngTemplateContextGuard(_t1, _t2)){
this.onSelect(_t3);
}
});
}
}
