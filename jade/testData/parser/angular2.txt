XmlFile:angular2.jade
  PsiElement(DOCUMENT)
    JadeTagImpl(TAG)
      JadeAttributeImpl(XML_ATTRIBUTE)
        PsiElement(XML_NAME)
          <empty list>
        PsiElement(XML_ATTRIBUTE_VALUE)
          JadeClassImpl(CLASS)
            PsiElement(DOT)('.')
            JadeClassNameImpl(TAG_CLASS)('container')
      PsiElement(INDENT)('\n  ')
      JadeTagImpl(TAG)
        XmlToken:XML_TAG_NAME('div')
        PsiElement(LPAREN)('(')
        PsiElement(JADE_PSEUDO_WHITESPACE)
          <empty list>
        JadeAttributeImpl(XML_ATTRIBUTE)
          XmlToken:XML_NAME('[hidden]')
          PsiElement(EQ)('=')
          PsiElement(XML_ATTRIBUTE_VALUE)
            JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
              JSLiteralExpression
                PsiElement(JS:STRING_LITERAL)(''submitted'')
        PsiElement(RPAREN)(')')
        PsiElement(INDENT)('\n    ')
        JadeTagImpl(TAG)
          XmlToken:XML_TAG_NAME('h1')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('Hero')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('Form')
        PsiElement(INDENT)('\n    ')
        JadeTagImpl(TAG)
          XmlToken:XML_TAG_NAME('form')
          PsiElement(LPAREN)('(')
          PsiElement(JADE_PSEUDO_WHITESPACE)
            <empty list>
          JadeAttributeImpl(XML_ATTRIBUTE)
            XmlToken:XML_NAME('(ngsubmit)')
            PsiElement(EQ)('=')
            PsiElement(XML_ATTRIBUTE_VALUE)
              JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                JSLiteralExpression
                  PsiElement(JS:STRING_LITERAL)(''onSubmit()'')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          JadeAttributeImpl(XML_ATTRIBUTE)
            XmlToken:XML_NAME('#heroform')
            PsiElement(EQ)('=')
            PsiElement(XML_ATTRIBUTE_VALUE)
              JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                JSLiteralExpression
                  PsiElement(JS:STRING_LITERAL)(''ngForm'')
          PsiElement(RPAREN)(')')
          PsiElement(INDENT)('\n      ')
          JadeTagImpl(TAG)
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('form-group')
            PsiElement(INDENT)('\n        ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('label')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('for')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''name'')
              PsiElement(RPAREN)(')')
              XmlText
                PsiWhiteSpace(' ')
                XmlToken:XML_DATA_CHARACTERS('Name')
            PsiElement(INDENT)('\n        ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('input')
              JadeAttributeImpl(XML_ATTRIBUTE)
                PsiElement(XML_NAME)
                  <empty list>
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JadeClassImpl(CLASS)
                    PsiElement(DOT)('.')
                    JadeClassNameImpl(TAG_CLASS)('form-control')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('type')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''text'')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('[(ngmodel)]')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''model.name'')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('ngcontrol')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''name'')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('required')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('''')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('#name')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''ngForm'')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n        ')
            JadeTagImpl(TAG)
              JadeAttributeImpl(XML_ATTRIBUTE)
                PsiElement(XML_NAME)
                  <empty list>
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JadeClassImpl(CLASS)
                    PsiElement(DOT)('.')
                    JadeClassNameImpl(TAG_CLASS)('alert')
              JadeAttributeImpl(XML_ATTRIBUTE)
                PsiElement(XML_NAME)
                  <empty list>
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JadeClassImpl(CLASS)
                    PsiElement(DOT)('.')
                    JadeClassNameImpl(TAG_CLASS)('alert-danger')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('[hidden]')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''name.valid'')
              PsiElement(RPAREN)(')')
              PsiElement(INDENT)('\n          ')
              JadeTagImpl(TAG)
                XmlToken:XML_TAG_NAME('b')
                XmlText
                  PsiWhiteSpace(' ')
                  XmlToken:XML_DATA_CHARACTERS('Name')
              PsiElement(INDENT)('\n          ')
              PsiElement(PIPED_TEXT)
                PsiElement(PIPE)('|')
                XmlText
                  PsiWhiteSpace(' ')
                  PsiWhiteSpace(' ')
                  XmlToken:XML_DATA_CHARACTERS('is')
                  PsiWhiteSpace(' ')
                  XmlToken:XML_DATA_CHARACTERS('required')
          PsiElement(INDENT)('\n      ')
          JadeTagImpl(TAG)
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('form-group')
            PsiElement(INDENT)('\n        ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('label')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('for')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''alterEgo'')
              PsiElement(RPAREN)(')')
              XmlText
                PsiWhiteSpace(' ')
                XmlToken:XML_DATA_CHARACTERS('Alter')
                PsiWhiteSpace(' ')
                XmlToken:XML_DATA_CHARACTERS('Ego')
            PsiElement(INDENT)('\n        ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('input')
              JadeAttributeImpl(XML_ATTRIBUTE)
                PsiElement(XML_NAME)
                  <empty list>
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JadeClassImpl(CLASS)
                    PsiElement(DOT)('.')
                    JadeClassNameImpl(TAG_CLASS)('form-control')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('type')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''text'')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('[(ngmodel)]')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''model.alterEgo'')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('ngcontrol')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''alterEgo'')
              PsiElement(RPAREN)(')')
          PsiElement(INDENT)('\n      ')
          JadeTagImpl(TAG)
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('form-group')
            PsiElement(INDENT)('\n        ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('label')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('for')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''power'')
              PsiElement(RPAREN)(')')
              XmlText
                PsiWhiteSpace(' ')
                XmlToken:XML_DATA_CHARACTERS('Hero')
                PsiWhiteSpace(' ')
                XmlToken:XML_DATA_CHARACTERS('Power')
            PsiElement(INDENT)('\n        ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('select')
              JadeAttributeImpl(XML_ATTRIBUTE)
                PsiElement(XML_NAME)
                  <empty list>
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JadeClassImpl(CLASS)
                    PsiElement(DOT)('.')
                    JadeClassNameImpl(TAG_CLASS)('form-control')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('required')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('''')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('[(ngmodel)]')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''model.power'')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('ngcontrol')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)(''power'')
              PsiElement(RPAREN)(')')
              PsiElement(INDENT)('\n          ')
              JadeTagImpl(TAG)
                XmlToken:XML_TAG_NAME('option')
                PsiElement(LPAREN)('(')
                PsiElement(JADE_PSEUDO_WHITESPACE)
                  <empty list>
                JadeAttributeImpl(XML_ATTRIBUTE)
                  XmlToken:XML_NAME('*ngfor')
                  PsiElement(EQ)('=')
                  PsiElement(XML_ATTRIBUTE_VALUE)
                    JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                      JSLiteralExpression
                        PsiElement(JS:STRING_LITERAL)(''#p of powers'')
                PsiElement(COMMA)(',')
                PsiWhiteSpace(' ')
                JadeAttributeImpl(XML_ATTRIBUTE)
                  XmlToken:XML_NAME('[value]')
                  PsiElement(EQ)('=')
                  PsiElement(XML_ATTRIBUTE_VALUE)
                    JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                      JSLiteralExpression
                        PsiElement(JS:STRING_LITERAL)(''p'')
                PsiElement(RPAREN)(')')
                XmlText
                  PsiWhiteSpace(' ')
                  XmlToken:XML_DATA_CHARACTERS('{{p}}')
          PsiElement(INDENT)('\n      ')
          JadeTagImpl(TAG)
            XmlToken:XML_TAG_NAME('button')
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('btn')
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('btn-default')
            PsiElement(LPAREN)('(')
            PsiElement(JADE_PSEUDO_WHITESPACE)
              <empty list>
            JadeAttributeImpl(XML_ATTRIBUTE)
              XmlToken:XML_NAME('type')
              PsiElement(EQ)('=')
              PsiElement(XML_ATTRIBUTE_VALUE)
                JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                  JSLiteralExpression
                    PsiElement(JS:STRING_LITERAL)(''submit'')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            JadeAttributeImpl(XML_ATTRIBUTE)
              XmlToken:XML_NAME('[disabled]')
              PsiElement(EQ)('=')
              PsiElement(XML_ATTRIBUTE_VALUE)
                JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                  JSLiteralExpression
                    PsiElement(JS:STRING_LITERAL)(''!heroForm.form.valid'')
            PsiElement(RPAREN)(')')
            XmlText
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('Submit')
      PsiElement(INDENT)('\n  ')
      JadeTagImpl(TAG)
        XmlToken:XML_TAG_NAME('div')
        PsiElement(LPAREN)('(')
        PsiElement(JADE_PSEUDO_WHITESPACE)
          <empty list>
        JadeAttributeImpl(XML_ATTRIBUTE)
          XmlToken:XML_NAME('[hidden]')
          PsiElement(EQ)('=')
          PsiElement(XML_ATTRIBUTE_VALUE)
            JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
              JSLiteralExpression
                PsiElement(JS:STRING_LITERAL)(''!submitted'')
        PsiElement(RPAREN)(')')
        PsiElement(INDENT)('\n    ')
        JadeTagImpl(TAG)
          XmlToken:XML_TAG_NAME('h2')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('You')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('submitted')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('following:')
        PsiElement(INDENT)('\n    ')
        JadeTagImpl(TAG)
          JadeAttributeImpl(XML_ATTRIBUTE)
            PsiElement(XML_NAME)
              <empty list>
            PsiElement(XML_ATTRIBUTE_VALUE)
              JadeClassImpl(CLASS)
                PsiElement(DOT)('.')
                JadeClassNameImpl(TAG_CLASS)('row')
          PsiElement(INDENT)('\n      ')
          JadeTagImpl(TAG)
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('col-xs-3')
            XmlText
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('Name')
          PsiElement(INDENT)('\n      ')
          JadeTagImpl(TAG)
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('col-xs-9')
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('pull-left')
            XmlText
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('{{')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('model.name')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('}}')
        PsiElement(INDENT)('\n    ')
        JadeTagImpl(TAG)
          JadeAttributeImpl(XML_ATTRIBUTE)
            PsiElement(XML_NAME)
              <empty list>
            PsiElement(XML_ATTRIBUTE_VALUE)
              JadeClassImpl(CLASS)
                PsiElement(DOT)('.')
                JadeClassNameImpl(TAG_CLASS)('row')
          PsiElement(INDENT)('\n      ')
          JadeTagImpl(TAG)
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('col-xs-3')
            XmlText
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('Alter')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('Ego')
          PsiElement(INDENT)('\n      ')
          JadeTagImpl(TAG)
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('col-xs-9')
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('pull-left')
            XmlText
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('{{')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('model.alterEgo')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('}}')
        PsiElement(INDENT)('\n    ')
        JadeTagImpl(TAG)
          JadeAttributeImpl(XML_ATTRIBUTE)
            PsiElement(XML_NAME)
              <empty list>
            PsiElement(XML_ATTRIBUTE_VALUE)
              JadeClassImpl(CLASS)
                PsiElement(DOT)('.')
                JadeClassNameImpl(TAG_CLASS)('row')
          PsiElement(INDENT)('\n      ')
          JadeTagImpl(TAG)
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('col-xs-3')
            XmlText
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('Power')
          PsiElement(INDENT)('\n      ')
          JadeTagImpl(TAG)
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('col-xs-9')
            JadeAttributeImpl(XML_ATTRIBUTE)
              PsiElement(XML_NAME)
                <empty list>
              PsiElement(XML_ATTRIBUTE_VALUE)
                JadeClassImpl(CLASS)
                  PsiElement(DOT)('.')
                  JadeClassNameImpl(TAG_CLASS)('pull-left')
            XmlText
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('{{')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('model.power')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('}}')
        PsiElement(INDENT)('\n    ')
        JadeTagImpl(TAG)
          XmlToken:XML_TAG_NAME('br')
        PsiElement(INDENT)('\n    ')
        JadeTagImpl(TAG)
          XmlToken:XML_TAG_NAME('button')
          JadeAttributeImpl(XML_ATTRIBUTE)
            PsiElement(XML_NAME)
              <empty list>
            PsiElement(XML_ATTRIBUTE_VALUE)
              JadeClassImpl(CLASS)
                PsiElement(DOT)('.')
                JadeClassNameImpl(TAG_CLASS)('btn')
          JadeAttributeImpl(XML_ATTRIBUTE)
            PsiElement(XML_NAME)
              <empty list>
            PsiElement(XML_ATTRIBUTE_VALUE)
              JadeClassImpl(CLASS)
                PsiElement(DOT)('.')
                JadeClassNameImpl(TAG_CLASS)('btn-default')
          PsiElement(LPAREN)('(')
          PsiElement(JADE_PSEUDO_WHITESPACE)
            <empty list>
          JadeAttributeImpl(XML_ATTRIBUTE)
            XmlToken:XML_NAME('(click)')
            PsiElement(EQ)('=')
            PsiElement(XML_ATTRIBUTE_VALUE)
              JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                JSLiteralExpression
                  PsiElement(JS:STRING_LITERAL)(''submitted=false'')
          PsiElement(RPAREN)(')')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('Edit')