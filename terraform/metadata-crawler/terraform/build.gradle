import groovy.json.JsonOutput
import groovy.json.JsonSlurper

apply plugin: 'java'
apply plugin: 'maven-publish'

group = System.getenv('ARTIFACT_GROUP') ?: 'org.intellij.plugins.hcl.terraform'
version = System.getenv('ARTIFACT_VERSION') ?: '2023.3.0'

def repositoryUrl = System.getenv('REPO_URL') ?: "https://packages.jetbrains.team/maven/p/ij/intellij-dependencies"
def repoUsername = System.getenv('REPO_USERNAME') ?: 'spaceUsername'
def repoPassword = System.getenv('REPO_PASSWORD') ?: 'spacePassword'

boolean isSnapshot = version.endsWith('-SNAPSHOT')

sourceSets.main.resources { srcDirs += 'resources' }
sourceSets.main.resources { srcDirs += 'plugins-meta/resources' }

task collectMetadata(type: Exec) {
  commandLine 'bash', 'ls-schemas-extractor/bin/ls-schemas-extractor'
}

processResources {
  dependsOn collectMetadata
  doLast {
    if (!isSnapshot) {
      print "${outputs.files.asPath}"
      fileTree(dir: outputs.files.asPath, include: '**/*.json').each {
        file -> file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
      }
    }
  }
}

jar {
  includeEmptyDirs false
  eachFile { details ->
    details.path = "terraform/$details.path"
  }
}


publishing {
  publications {
    maven(MavenPublication) {
      from components.java
      groupId = project.group
      artifactId = project.archivesBaseName
      version = project.version
      suppressAllPomMetadataWarnings()
    }
  }
  repositories {
    maven {
      url repositoryUrl
      allowInsecureProtocol true
      credentials {
        username = repoUsername
        password = repoPassword
      }
    }
  }
}
