### auto-generated section `build intellij.dts.pp` start
load("@rules_jvm//:jvm.bzl", "jvm_resources")
load("@rules_jvm//:rules.bzl", "jvm_library")
load("@rules_kotlin//kotlin:jvm.bzl", "kt_jvm_test")

jvm_resources(
  name = "pp_resources",
  files = glob(["resources/**/*"]),
  strip_prefix = "resources"
)

jvm_library(
  name = "pp",
  module_name = "intellij.dts.pp",
  visibility = ["//visibility:public"],
  srcs = glob(["gen/**/*.kt", "gen/**/*.java", "src/**/*.kt", "src/**/*.java"], allow_empty = True, exclude = ["**/module-info.java"]),
  javac_opts = "@rules_jvm//:j17",
  kotlinc_opts = "@rules_jvm//:k17",
  deps = [
    "@community//platform/core-api:core",
    "@community//platform/core-impl",
    "@community//platform/lang-api:lang",
    "@community//platform/lang-impl",
    "@community//platform/code-style-api:codeStyle",
    "@community//platform/code-style-impl:codeStyle-impl",
    "@community//platform/core-ui",
  ],
  runtime_deps = [":pp_resources"]
)

kt_jvm_test(
  name = "pp_test",
  visibility = ["//visibility:public"],
  srcs = glob(["test/**/*.kt", "test/**/*.java", "testGen/**/*.kt", "testGen/**/*.java"], allow_empty = True, exclude = ["**/module-info.java"]),
  javac_opts = "@rules_jvm//:j17",
  kotlinc_opts = "@rules_jvm//:k17",
  associates = [":pp"],
  deps = [
    "@community//platform/core-api:core",
    "@community//platform/core-impl",
    "@community//platform/lang-api:lang",
    "@community//platform/lang-impl",
    "@community//platform/code-style-api:codeStyle",
    "@community//platform/code-style-impl:codeStyle-impl",
    "@community//platform/core-ui",
    "@community//platform/testFramework",
    "@community//platform/testFramework:testFramework_test",
  ],
  runtime_deps = [":pp_resources"]
)
### auto-generated section `build intellij.dts.pp` end